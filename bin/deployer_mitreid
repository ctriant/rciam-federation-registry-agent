#!/usr/bin/env python3

import json, sched, time
import subprocess
import os
import argparse
import requests
import logging
from common import get_log_conf
from ServiceRegistryAms.PullPublish import PullPublish

log = logging.getLogger(__name__)

def init_ams_agent(path):
    log.info('Init ams agent')
    with open(path) as json_data_file:
        config = json.load(json_data_file)
    return PullPublish(config)


if __name__ == '__main__':
    # Get config path from arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('-c', required=True, type=str, help="Configuration file location path")
    args = parser.parse_args()
    path = args.c
    with open(path) as json_data_file:
        config = json.load(json_data_file)
    get_log_conf(config['log_conf'])

    ams = init_ams_agent(path)
    
    # Get messages
    log.info('Pull messages from ams')
    messages = ams.pull(1)
    log.info('Received ' + str(len(messages)) +' messages from ams')
    messages_counter = len(messages)
    while len(messages)>0:
        update_data(messages)
        log.info('Pull messages from ams')
        messages = ams.pull(1)
        log.info('Received ' + str(len(messages)) +' messages from ams')
        messages_counter += len(messages)

    if messages_counter > 0:
        log.info(messages_counter + ' messages received and deployed to mitreID')
    else:
        log.info('No updates for mitreID')
    log.info('Exit script')
